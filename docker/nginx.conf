# Hirameku is a cloud-native, vendor-agnostic, serverless application for
# studying flashcards with support for localization and accessibility.
# Copyright (C) 2023 Jon Nicholson
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

events {
    worker_connections    1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        "" close;
    }

    server {
        listen 80;
        listen [::]:80;

        location /api/v1/identity/ {
            proxy_pass       http://identityservice;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host  $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/card/ {
            proxy_pass       http://cardservice;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host  $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/contact/ {
            proxy_pass       http://contactservice;
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host  $server_name;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
